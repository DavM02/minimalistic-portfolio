{"version":3,"file":"static/js/886.12af1d05.chunk.js","mappings":"0NA+CA,QA5CA,SAAwBA,GAGxB,MAAMC,EAAgBD,EAAME,MAAQ,GAEhC,OAAOC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAAA,OAAKG,GAAG,kBAAiBD,UACrBE,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAACC,MAAO,CAAEC,IAAK,OAAQC,OAAQ,QAASC,UAAW,UAAWP,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,OAAKU,UAAU,gBAAeR,UAC1BF,EAAAA,EAAAA,KAAA,OAAMW,IAAKd,EAAMe,cAAgBf,EAAMgB,OAAOhB,EAAME,YAExDK,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kBAAiBR,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBACNF,EAAAA,EAAAA,KAAA,MAAAE,SAAKL,EAAMe,cAAiBE,EAAKhB,GAAeiB,gBAEhDf,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eACNE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAIL,EAAMe,cAAiBE,EAAKhB,GAAekB,QAAQC,KAAK,MAAM,QAElEjB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBACNE,EAAAA,EAAAA,MAAA,QAAAF,SAAA,CAAM,IAAEL,EAAMe,cAAiBE,EAAKhB,GAAeoB,cAAc,QAEjElB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBACNE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAIL,EAAMe,cAAgBE,EAAKhB,GAAeqB,WAAWF,KAAK,MAAM,QAEpEjB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,YACNE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,IAAEL,EAAMe,cAAgBE,EAAKhB,GAAesB,gBAE/CpB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBACNF,EAAAA,EAAAA,KAAA,KAAAE,SACKL,EAAMe,cAAgBE,EAAKhB,GAAeuB,cAAcC,KAAI,CAACC,EAAOxB,KACjEK,EAAAA,EAAAA,MAAA,QAAAF,SAAA,CACKqB,EAAMC,KAAK,KAAGD,EAAME,KAAK,KAACzB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WAD1BH,gBAYvC,E,kCCpCA,MAwIA,EAxI0B2B,KACtB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC9BG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAC3B,MAAE9B,IAAUmC,EAAAA,EAAAA,OAEXC,EAAUC,IAAeP,EAAAA,EAAAA,UAAS9B,IAEnC,aAAEsC,EAAY,OAAExB,IAAWyB,EAAAA,EAAAA,YAAWC,EAAAA,GACtCC,EAAmB,IAAI3B,KAAWA,KAAWA,KAAWA,GAExD4B,GAAcC,EAAAA,EAAAA,QAAO,MACrBC,EAAiBF,EAAYG,SAAWH,EAAYG,QAAQC,YAC5DC,EAAkC,GAA1BN,EAAiBO,OAAwC,GAA1BP,EAAiBO,OAAcJ,EAAiB,GACvFK,EAAsBC,OAAOC,YAAYV,EAAiBlB,KAAI,CAAC6B,EAAGpD,IAAU,CAACA,GAAO,OACnFqD,EAAcC,IAAmBxB,EAAAA,EAAAA,UAAS,CAAEmB,wBAE7CpC,GAAgB0C,MAAMvD,IAAUA,GAAS,GAAKA,EAAQyC,EAAiBO,OAEvEQ,GAAWC,EAAAA,EAAAA,MAIXC,GAAkBC,EAAAA,EAAAA,cAAa5C,IACjCc,GAAQ,GACRG,EAAUjB,EAAK,GAChB,CAACkB,EAAMG,EAAUL,IAEd6B,GAAkBD,EAAAA,EAAAA,cAAa5C,IACjC,IAAKa,EAAM,OAEX,IAAIiC,EAAS9C,EAAOgB,EAChB+B,EAAS7B,EAAO4B,EAEhBC,EAAS,EACTA,EAAS,EACFA,IAAWf,IAClBe,EAAS,EACTD,EAAS,EACT3B,EAAQ,GACRG,EAAY,GACZL,EAAU,GACVH,GAAQ,IAGZ,MAAMkC,EAAeC,KAAKC,OAAOH,EAAS,IAE1CI,YAAW,KACP7B,EAAY0B,EAAa,GAC1B,KAGH7B,EAAQ4B,GACR9B,EAAUjB,EAAK,GAEhB,CAACgB,EAAQE,EAAMG,IAGZ+B,GAAgBR,EAAAA,EAAAA,cAAY,KAC9B9B,GAAQ,EAAM,GAEf,CAACO,EAAUH,EAAMF,KAYpBqC,EAAAA,EAAAA,YAAU,KACNZ,EAAS,UAADa,OAAWjC,GAAY,CAAEkC,SAAS,GAAO,GAClD,CAAClC,KAEJgC,EAAAA,EAAAA,YAAU,KACDvD,GACD2C,EAAS,UACb,GACD,CAAC3C,IAEJ,MAAM0D,EAAa9B,EAAiBlB,KAAI,CAACiD,EAAOxE,KAC5CC,EAAAA,EAAAA,KAAA,MACIM,MAAO,CACHkE,UAAU,cAADJ,OAAgBpC,EAAI,OAC7ByC,OAAQ9C,EAAO,eAAiB,QAElCzB,UAEFE,EAAAA,EAAAA,MAAA,OAAKM,UAAU,QAAQJ,MAAO,CAAEoE,MAAO/C,EAAO,MAAQ,QAAUzB,SAAA,EAC1DkD,EAAarD,KACXC,EAAAA,EAAAA,KAAA,OAAKU,UAAU,eAAcR,SAAA,kBAIjCF,EAAAA,EAAAA,KAAA,OAAK2E,QAAQ,OAAOC,OAAQA,IAlCf7E,KAErBsD,GAAgBwB,IAAU,IACnBA,EACH,CAAC9E,IAAQ,KACV,EA6BuC+E,CAAgB/E,GAAQY,IAAK4D,EAAOQ,IAAG,OAAAX,OAASrE,EAAQ,SAbzFA,KAkBb,OACIK,EAAAA,EAAAA,MAAC4E,EAAAA,EAAc,CAAC7E,GAAG,qBAAoBD,SAAA,EAEnCE,EAAAA,EAAAA,MAAC6E,EAAAA,GAAS,CAAA/E,SAAA,EACNF,EAAAA,EAAAA,KAAA,OAAKU,UAAU,qBAAqBwE,IAAKzC,EAAYvC,UACjDF,EAAAA,EAAAA,KAAA,MACIM,MAAO,CAAE6E,OAAQxD,EAAO,WAAa,QACrCyD,YAAcC,IACV5B,EAAgB4B,EAAEC,QAAQ,EAE9BC,YAAcF,IACV1B,EAAgB0B,EAAEC,QAAQ,EAE9BE,UAAWA,IAAMtB,IACjBuB,aAAeJ,GAAM5B,EAAgB4B,EAAEK,QAAQ,GAAGJ,SAClDK,YAAcN,GAAM1B,EAAgB0B,EAAEK,QAAQ,GAAGJ,SACjDM,WAAYA,IAAM1B,IAClB2B,cAAeA,IAAM3B,IACrB4B,aAAcA,IAAMzD,GAAa,GACjC0D,aAAcA,KACV1D,GAAa,GACb6B,GAAe,EACjBhE,SAEDoE,OAGTtE,EAAAA,EAAAA,KAACgG,EAAc,CAACpF,aAAcA,EAAcb,MAAOoC,EAAUtB,OAAQ2B,QAEzExC,EAAAA,EAAAA,KAACiG,EAAAA,EAAK,MACO,C,wDCxHzB,QAnBA,WAEI,OAAOjG,EAAAA,EAAAA,KAAA,OAAKU,UAAU,QAAOR,UACzBF,EAAAA,EAAAA,KAACiF,EAAAA,GAAS,CAAA/E,UACNE,EAAAA,EAAAA,MAACC,EAAAA,GAAG,CAAAH,SAAA,EAEIF,EAAAA,EAAAA,KAAA,OAAKU,UAAU,yBAAwBR,UAEnCF,EAAAA,EAAAA,KAAA,QAAAE,SAAA,oBAGRF,EAAAA,EAAAA,KAAA,OAAKU,UAAU,SAAQR,UACnBF,EAAAA,EAAAA,KAAA,QAAAE,SAAA,qBAKpB,C","sources":["components/galleries/thumbnail-carousel/CurrentProject.js","components/galleries/thumbnail-carousel/ThumbnailCarousel.js","components/label/Label.js"],"sourcesContent":["import { Row } from \"../../containers/containers\";\r\nimport data from '../../../data/data.json'\r\n\r\nfunction CurrentProject(props) {\r\n\r\n\r\nconst adjustedIndex = props.index % 20;\r\n\r\n    return <>\r\n        <div id=\"current-project\">\r\n            <Row style={{ gap: '20px', height: '405px', overflowY: 'hidden' }}>\r\n                <div className=\"current-image\">\r\n                    <img  src={props.isValidIndex && props.images[props.index]}></img>\r\n                </div>\r\n                <div className=\"current-project\">\r\n                    <span>project name:</span>\r\n                    <h2>{props.isValidIndex &&  data[adjustedIndex].project_name}</h2>\r\n\r\n                    <span>authors: </span>\r\n                    <p>{props.isValidIndex &&  data[adjustedIndex].authors.join(', ')};</p>\r\n\r\n                    <span>creation date:</span>\r\n                    <span> {props.isValidIndex &&  data[adjustedIndex].creation_date};</span>\r\n\r\n                    <span>references:</span>\r\n                    <p>{props.isValidIndex && data[adjustedIndex].references.join(', ')};</p>\r\n\r\n                    <span>about:</span>\r\n                    <p> {props.isValidIndex && data[adjustedIndex].description}</p>\r\n\r\n                    <span>color palette:</span>\r\n                    <p>\r\n                        {props.isValidIndex && data[adjustedIndex].color_palette.map((color, index) => (\r\n                            <span key={index}>\r\n                                {color.name}: {color.code},<span>&nbsp;</span> \r\n                            </span>\r\n                        ))}\r\n                    </p>\r\n                </div>\r\n            </Row>\r\n        </div>\r\n    </>\r\n\r\n\r\n\r\n}\r\n\r\nexport default CurrentProject","import Container from '../../containers/containers';\r\nimport './ThumbnailCarousel.scss';\r\nimport { useState, useContext, useRef, useCallback, useEffect } from 'react';\r\nimport { MenuContext } from '../../../provider/MenuProvider';\r\nimport CurrentProject from './CurrentProject';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport PageTransition from '../../page-transition/PageTransition';\r\nimport Label from '../../label/Label';\r\n\r\nconst ThumbnailCarousel = () => {\r\n    const [drag, setDrag] = useState(false);\r\n    const [startX, setStartX] = useState(null);\r\n    const [posX, setPosX] = useState(0);\r\n    const { index } = useParams()\r\n\r\n    const [curIndex, setCurIndex] = useState(index);\r\n\r\n    const { changeCursor, images } = useContext(MenuContext);\r\n    const duplicatedImages = [...images, ...images, ...images, ...images];\r\n\r\n    const carouselRef = useRef(null);\r\n    const containerWidth = carouselRef.current && carouselRef.current.offsetWidth;\r\n    const width = duplicatedImages.length * 60 + duplicatedImages.length * 10 - containerWidth - 10;\r\n    const initialLoadedStates = Object.fromEntries(duplicatedImages.map((_, index) => [index, false]));\r\n    const [loadedStates, setLoadedStates] = useState({ initialLoadedStates });\r\n\r\n    const isValidIndex = !isNaN(index) && index >= 0 && index < duplicatedImages.length;\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n    const handleMouseDown = useCallback((data) => {\r\n        setDrag(true);\r\n        setStartX(data);\r\n    }, [posX, curIndex, startX]);\r\n\r\n    const handleMouseMove = useCallback((data) => {\r\n        if (!drag) return;\r\n\r\n        let deltaX = data - startX;\r\n        let newPos = posX + deltaX;\r\n\r\n        if (newPos > 0) {\r\n            newPos = 0;\r\n        } else if (newPos <= -width) {\r\n            newPos = 0;\r\n            deltaX = 0;\r\n            setPosX(0);\r\n            setCurIndex(0);\r\n            setStartX(0);\r\n            setDrag(false);\r\n        }\r\n\r\n        const currentIndex = Math.floor(-newPos / 70);\r\n\r\n        setTimeout(() => {\r\n            setCurIndex(currentIndex);\r\n        }, 500);\r\n\r\n\r\n        setPosX(newPos);\r\n        setStartX(data);\r\n\r\n    }, [startX, posX, curIndex]);\r\n\r\n\r\n    const handleMouseUp = useCallback(() => {\r\n        setDrag(false);\r\n\r\n    }, [curIndex, posX, startX]);\r\n\r\n    const handleImageLoad = (index) => {\r\n\r\n        setLoadedStates(prevStates => ({\r\n            ...prevStates,\r\n            [index]: true,\r\n        }));\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        navigate(`?index=${curIndex}`, { replace: true });\r\n    }, [curIndex]);\r\n\r\n    useEffect(() => {\r\n        if (!isValidIndex) {\r\n            navigate('/home/0'); // Замените '/error' на путь к вашей странице с ошибкой\r\n        }\r\n    }, [isValidIndex]);\r\n\r\n    const renderList = duplicatedImages.map((image, index) => (\r\n        <li key={index}\r\n            style={{\r\n                transform: `translateX(${posX}px)`,\r\n                filter: drag ? 'grayscale(1)' : 'none',\r\n\r\n            }}\r\n        >\r\n            <div className=\"image\" style={{ scale: drag ? '90%' : 'none', }}>\r\n                {!loadedStates[index] && (\r\n                    <div className='image-loader'  >\r\n                        {`[Loading...]`}\r\n                    </div>\r\n                )}\r\n                <img loading=\"lazy\" onLoad={() => handleImageLoad(index)} src={image} alt={`img-${index + 1}`} />\r\n            </div>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <PageTransition id='thumbnail-carousel'>\r\n\r\n            <Container>\r\n                <div className=\"thumbnail-carousel\" ref={carouselRef}>\r\n                    <ul\r\n                        style={{ cursor: drag ? 'grabbing' : 'grab' }}\r\n                        onMouseDown={(e) => {\r\n                            handleMouseDown(e.clientX);\r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                            handleMouseMove(e.clientX);\r\n                        }}\r\n                        onMouseUp={() => handleMouseUp()}\r\n                        onTouchStart={(e) => handleMouseDown(e.touches[0].clientX)}\r\n                        onTouchMove={(e) => handleMouseMove(e.touches[0].clientX)}\r\n                        onTouchEnd={() => handleMouseUp()}\r\n                        onTouchCancel={() => handleMouseUp()}\r\n                        onMouseEnter={() => changeCursor(true)}\r\n                        onMouseLeave={() => {\r\n                            changeCursor(false);\r\n                            handleMouseUp();\r\n                        }}\r\n                    >\r\n                        {renderList}\r\n                    </ul>\r\n                </div>\r\n                <CurrentProject isValidIndex={isValidIndex} index={curIndex} images={duplicatedImages}   ></CurrentProject>\r\n            </Container>\r\n            <Label></Label>\r\n        </PageTransition>\r\n    );\r\n};\r\n\r\nexport default ThumbnailCarousel;\r\n","import { Row } from \"../containers/containers\"\r\nimport  Container from \"../containers/containers\"\r\nfunction Label() {\r\n\r\n    return <div className=\"label\">\r\n        <Container>\r\n            <Row>\r\n              \r\n                    <div className=\"propject-creation-date\">\r\n                      \r\n                        <span>{`[24.12.2023]`}</span>\r\n                    </div>\r\n         \r\n                <div className=\"author\">\r\n                    <span>{`[DavM02]`}</span>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n}\r\n\r\nexport default Label"],"names":["props","adjustedIndex","index","_jsx","_Fragment","children","id","_jsxs","Row","style","gap","height","overflowY","className","src","isValidIndex","images","data","project_name","authors","join","creation_date","references","description","color_palette","map","color","name","code","ThumbnailCarousel","drag","setDrag","useState","startX","setStartX","posX","setPosX","useParams","curIndex","setCurIndex","changeCursor","useContext","MenuContext","duplicatedImages","carouselRef","useRef","containerWidth","current","offsetWidth","width","length","initialLoadedStates","Object","fromEntries","_","loadedStates","setLoadedStates","isNaN","navigate","useNavigate","handleMouseDown","useCallback","handleMouseMove","deltaX","newPos","currentIndex","Math","floor","setTimeout","handleMouseUp","useEffect","concat","replace","renderList","image","transform","filter","scale","loading","onLoad","prevStates","handleImageLoad","alt","PageTransition","Container","ref","cursor","onMouseDown","e","clientX","onMouseMove","onMouseUp","onTouchStart","touches","onTouchMove","onTouchEnd","onTouchCancel","onMouseEnter","onMouseLeave","CurrentProject","Label"],"sourceRoot":""}